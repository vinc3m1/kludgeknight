---
import { getRKDevices } from '../utils/rkConfig';
import { buildImageManifest } from '../utils/buildImageManifest';
import App from '../components/App';
import '../index.css';

// Load keyboards and image manifest at build time
const devices = await getRKDevices();
const keyboards = Array.from(devices.entries()).map(([pid, name]) => ({ pid, name }));
const imageManifest = await buildImageManifest();
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="KludgeKnight - Browser-based key remapper and lighting controller for Royal Kludge keyboards. No software to download, runs directly in your browser using WebHID." />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>KludgeKnight - Royal Kludge Keyboard Configuration</title>

    <!-- Theme initialization (prevent FOUC) -->
    <script is:inline>
      (function() {
        const theme = localStorage.getItem('theme') || 'light';
        const effective = theme === 'system'
          ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light')
          : theme;
        document.documentElement.setAttribute('data-theme', effective);
        if (effective === 'dark') {
          document.documentElement.classList.add('dark');
        }
      })();
    </script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-YBJQ3DKPZR"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() { dataLayer.push(arguments); }
      gtag('js', new Date());

      gtag('config', 'G-YBJQ3DKPZR');
    </script>
  </head>
  <body>
    <App client:load initialKeyboards={keyboards} imageManifest={imageManifest} />
  </body>
</html>
